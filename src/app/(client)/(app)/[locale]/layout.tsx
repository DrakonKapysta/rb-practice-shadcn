import type { Metadata } from 'next'
import { notFound } from 'next/navigation'
import { hasLocale, NextIntlClientProvider } from 'next-intl'
import { setRequestLocale } from 'next-intl/server'
import { FC, ReactNode } from 'react'
import { getLangDir } from 'rtl-detect'

import { LayoutModule } from '@/app/(client)/modules/layout'
import { mainFont } from '@/config/fonts'
import { routing } from '@/pkg/libraries/locale'
import { RestApiProvider } from '@/pkg/libraries/rest-api'
import { UiProvider } from '@/pkg/libraries/ui'

import '@/config/styles/global.css'

interface IProps extends LayoutProps<'/[locale]'> {
  children: ReactNode
}

export async function generateStaticParams() {
  return routing.locales.map((locale) => ({ locale }))
}

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

const RootLayout: FC<Readonly<IProps>> = async (props) => {
  const { children, params } = props

  const locale = (await params).locale
  if (!hasLocale(routing.locales, locale)) {
    notFound()
  }

  setRequestLocale(locale)

  const languageDirection = getLangDir(locale)

  return (
    <html lang={locale} dir={languageDirection} suppressHydrationWarning>
      <body className={`${mainFont.className} antialiased`} suppressHydrationWarning>
        <NextIntlClientProvider>
          <UiProvider>
            <RestApiProvider>
              <LayoutModule>{children}</LayoutModule>
            </RestApiProvider>
          </UiProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  )
}

export default RootLayout
